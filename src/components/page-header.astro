---
import Rss from "./icons/rss.astro"

type Props = {
  rssUrl?: string
}

const gradient = (pageName?: string) => {
  switch (pageName) {
    case "talks":
      return "dark:from-cyan-300 from-cyan-700 via-indigo-800 dark:via-indigo-300 to-fuchsia-600 dark:to-fuchsia-300"
    case "channel":
      return "dark:from-amber-300 from-amber-700 dark:via-red-500 via-red-600 to-orange-500 "
    case "about":
      return "from-neutral-600 via-zinc-500 to-neutral-700 dark:from-rose-300 dark:via-blue-300 dark:to-purple-300"
    case "writing":
      return "from-neutral-800 via-zinc-500 to-neutral-700 dark:via-yellow-300 dark:to-yellow-300"
    case "uses":
      return "from-yellow-300 via-yellow-300 to-yellow-300"
    default:
      return "from-blue-300 via-indigo-300 to-purple-300"
  }
}

const pathname = new URL(Astro.request.url).pathname
const page = pathname.substring(1)

const { rssUrl } = Astro.props
---

<div class={`py-4 mt-12 animate-blur-in`}>
  <h1
    class={`relative font-thin text-6xl text-transparent bg-clip-text safari-gradient-text bg-gradient-to-br ${gradient(
      page,
    )} `}
  >
    <slot />
    {
      rssUrl && (
        <a href={rssUrl} title="RSS Feed">
          <Rss
            aria-labeled-by="rss-feed"
            class="w-6 h-6 inline-block text-orange-600 dark:text-amber-300 absolute top-0 ml-2 from-orange-400 to-amber-400 rounded-md"
          />
          <span id="rss-feed" class="sr-only">
            RSS feed for Atila's {page}
          </span>
        </a>
      )
    }
  </h1>
</div>
