---
export type VideoProps = {
  id: {
    videoId: string;
  };
  snippet: {
    title: string;
    publishedAt: string;
    description: string;
    thumbnails: {
      high: {
        url: string;
      };
    };
  };
};
const months = [
  "jan",
  "feb",
  "mar",
  "apr",
  "may",
  "jun",
  "jul",
  "aug",
  "sep",
  "oct",
  "nov",
  "dec",
];
// const VideoCard: VideoCardProps = ({ id, snippet }) => {
const { id, snippet } = Astro.props;

const monthIndex =
  new Date(snippet.publishedAt).getMonth() === 0
    ? new Date(snippet.publishedAt).getMonth()
    : new Date(snippet.publishedAt).getMonth();
---

<li
  class="cta-hover-sm group rounded-2xl h-[100%] max-w-prose bg-gradient-to-tl from-neutral-200 via-neutral-700 to-neutral-400 hover:from-orange-300 hover:via-amber-400 hover:to-red-500 p-2 transition-all"
>
  <div
    class="dark:bg-black bg-neutral-800 text-white h-[100%] py-2 px-4 rounded-lg"
  >
    <div>
      <time
        date-time={snippet.publishedAt}
        class="font-mono dark:text-slate-300 text-slate-500 block text-center pt-3"
      >
        {months[monthIndex]}/{new Date(snippet.publishedAt).getFullYear()}
      </time>
    </div>
    <a
      class="self-center"
      href={`https://youtube.com/watch?v=${id.videoId}`}
      rel="noopener"
      target="_blank"
      aria-hidden
      tab-index={-1}
    >
      <img
        class="mx-auto"
        src={snippet.thumbnails.medium.url}
        alt={`cover for ${snippet.title}`}
      />
    </a>
    <h2 class="flex w-full pt-4 text-2xl leading-relaxed text-center">
      <a
        class="block"
        href={`https://youtube.com/watch?v=${id.videoId}`}
        rel="noopener"
        target="_blank"
      >
        {decodeURI(snippet.title)}
      </a>
    </h2>
  </div>
</li>
